name: AI Agent Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  agent-review:
    name: Automated Code Review
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better context
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run linter
        id: lint
        run: |
          npm run lint 2>&1 | tee lint-output.txt
          echo "lint_status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      
      - name: Run tests
        id: test
        run: |
          npm test -- --coverage --json --outputFile=test-results.json
          echo "test_status=$?" >> $GITHUB_OUTPUT
        continue-on-error: true
      
      - name: Check test coverage
        id: coverage
        run: |
          COVERAGE=$(node -e "const r=require('./test-results.json'); console.log(r.coverageMap ? Object.values(r.coverageMap).reduce((a,c)=>a+c.lines.pct,0)/Object.keys(r.coverageMap).length : 0)")
          echo "coverage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"
      
      - name: Analyze PR changes
        id: analyze
        run: |
          FILES_CHANGED=$(git diff --name-only origin/${{ github.base_ref }}...HEAD | wc -l)
          LINES_ADDED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{sum+=$1} END {print sum}')
          LINES_REMOVED=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{sum+=$2} END {print sum}')
          
          echo "files_changed=$FILES_CHANGED" >> $GITHUB_OUTPUT
          echo "lines_added=$LINES_ADDED" >> $GITHUB_OUTPUT
          echo "lines_removed=$LINES_REMOVED" >> $GITHUB_OUTPUT
      
      - name: Generate review comment
        id: comment
        run: |
          cat << EOF > review-comment.md
          ## ü§ñ AI Agent Code Review
          
          ### üìä Summary
          - **Files changed**: ${{ steps.analyze.outputs.files_changed }}
          - **Lines added**: ${{ steps.analyze.outputs.lines_added }}
          - **Lines removed**: ${{ steps.analyze.outputs.lines_removed }}
          - **Test coverage**: ${{ steps.coverage.outputs.coverage }}%
          
          ### ‚úÖ Automated Checks
          
          | Check | Status |
          |-------|--------|
          | Linting | ${{ steps.lint.outputs.lint_status == '0' && '‚úÖ Passed' || '‚ùå Failed' }} |
          | Tests | ${{ steps.test.outputs.test_status == '0' && '‚úÖ Passed' || '‚ùå Failed' }} |
          | Coverage | ${{ steps.coverage.outputs.coverage >= 80 && '‚úÖ Meets threshold (>80%)' || '‚ö†Ô∏è Below threshold (<80%)' }} |
          
          ### üìã Review Checklist
          
          - [ ] Code follows project style guidelines
          - [ ] Changes are well documented
          - [ ] No sensitive information committed
          - [ ] Breaking changes are documented
          - [ ] Related issues are linked
          
          ### üí° Next Steps
          
          ${{ steps.lint.outputs.lint_status != '0' && '1. Fix linting errors\n' || '' }}
          ${{ steps.test.outputs.test_status != '0' && '2. Fix failing tests\n' || '' }}
          ${{ steps.coverage.outputs.coverage < 80 && '3. Increase test coverage\n' || '' }}
          
          ---
          *Generated by RepoAgents automated review system*
          *For detailed review, mention @claude or @jules in a comment*
          EOF
      
      - name: Post review comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const comment = fs.readFileSync('review-comment.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
      
      - name: Fail if checks didn't pass
        if: steps.lint.outputs.lint_status != '0' || steps.test.outputs.test_status != '0'
        run: |
          echo "One or more checks failed. Please fix the issues."
          exit 1
